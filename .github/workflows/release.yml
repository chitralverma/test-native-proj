name: Create Release
on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - main

permissions:
  contents: read

jobs:
  get-version:
    name: Compute and verify the version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: 'temurin'
          cache: 'sbt'
      - name: Get Version
        id: version
        run: echo "snapshot=$(sbt -no-colors 'print version' | tail -n 1)" >> $GITHUB_OUTPUT

      - name: Show Version
        run: echo $(sbt -no-colors 'print version' | tail -n 1)

      - name: Set Version in ENV
        run:
          echo "PROJECT_VERSION=${{ steps.version.outputs.snapshot }}" >> $GITHUB_ENV

      - name: Add Version to summary
        run: echo "${{ steps.version.outputs.snapshot }}" >> $GITHUB_STEP_SUMMARY

  publish:
    name: ${{ matrix.arch }} build

    runs-on: ${{ matrix.os }}

    env:
      TARGET_TRIPLE: ${{ matrix.arch }}

    strategy:
      fail-fast: true

      matrix:
        include:
          - os: ubuntu-latest
            arch: aarch64-unknown-linux-gnu
            packages: "sudo apt update && sudo apt-get install gcc-aarch64-linux-gnu"

          - os: ubuntu-latest
            arch: x86_64-unknown-linux-gnu
            packages: ""

          - os: ubuntu-latest
            arch: x86_64-pc-windows-gnu
            packages: "sudo apt update && sudo apt install mingw-w64"

          - os: windows-latest
            arch: x86_64-pc-windows-msvc
            packages: ""

          - os: macos-latest
            arch: x86_64-apple-darwin
            packages: ""

          - os: macos-latest
            arch: aarch64-apple-darwin
            packages: ""

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'sbt'

      - name: Install system packages
        run: ${{ matrix.packages }}

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/
            **/target/
            ~/.sbt
            ~/.ivy2/cache
            ~/.cache/coursier
          key: ${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.arch }}-

      - name: Cross publish artifacts containing native library
        run: |
          rustup target add ${{ matrix.arch }}
          sbt +aetherDeploy
